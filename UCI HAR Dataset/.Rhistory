find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("kernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
?help plot
?plot
getwd()
setwd("~/GitHub/GettingandCleaningDataProject")
download.data <- function () {
zip.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
zip.file <- 'dataset.zip'
download.file(zip.url, destfile = zip.file, method = 'curl')
unzip(zip.file)
}
setwd("C:\Users\George\Documents\GitHub\GettingandCleaningDataProject\UCI HAR Dataset")
setwd("\Users\George\Documents\GitHub\GettingandCleaningDataProject\UCI HAR Dataset")
setwd('/Users/George/Documents/GitHub/GettingandCleaningDataProject/UCI HAR Dataset')
features = read.table('./features.txt',header=FALSE); #imports features.txt
activityType = read.table('./activity_labels.txt',header=FALSE); #imports activity_labels.txt
subjectTrain = read.table('./train/subject_train.txt',header=FALSE); #imports subject_train.txt
xTrain = read.table('./train/x_train.txt',header=FALSE); #imports x_train.txt
yTrain = read.table('./train/y_train.txt',header=FALSE); #imports y_train.txt
features = fread('./features.txt',header=FALSE); #imports features.txt
activityType = fread('./activity_labels.txt',header=FALSE); #imports activity_labels.txt
subjectTrain = fread('./train/subject_train.txt',header=FALSE); #imports subject_train.txt
xTrain = fread('./train/x_train.txt',header=FALSE); #imports x_train.txt
yTrain = fread('./train/y_train.txt',header=FALSE); #imports y_train.txt
library(fread)
library("fread")
install.packages("fread")
View(activityType)
View(features)
View(subjectTrain)
View(xTrain)
View(yTrain)
?summary
summary(subjectTrain)
View(features)
View(activityType)
View(yTrain)
summary(ytrain)
summary(yTrain)
View(subjectTrain)
# Assigin column names to the data imported above
colnames(activityType) = c('activityId','activityType');
colnames(subjectTrain) = "subjectId";
colnames(xTrain) = features[,2];
colnames(yTrain) = "activityId";
View(activityType)
View(features)
View(subjectTrain)
View(xTrain)
View(yTrain)
View(xTrain)
trainingData <- cbind(subjectTrain,yTrain,xTrain)
View(trainingData)
View(activityType)
View(yTrain)
?match
testmatch<-match(yTrain,activityType)
testmatch<-match(yTrain,activityType,nomatch=0)
?merge
testmerge<-merge(activityType,yTrain, by = 'activityId')
View(testmerge)
#read in training data set
setwd('/Users/George/Documents/GitHub/GettingandCleaningDataProject/UCI HAR Dataset')
#read in training data set
features <- read.table('./features.txt',header=FALSE); #imports features.txt
activityType <- read.table('./activity_labels.txt',header=FALSE); #imports activity_labels.txt
subjectTrain <- read.table('./train/subject_train.txt',header=FALSE); #imports subject_train.txt
xTrain <- read.table('./train/x_train.txt',header=FALSE); #imports x_train.txt
yTrain <- read.table('./train/y_train.txt',header=FALSE); #imports y_train.txt
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTrain) <- "subjectId";
colnames(xTrain) <- features[,2];
colnames(yTrain) <- "activityId";
#tidied Training data
trainingData <- cbind(subjectTrain,yTrain,xTrain)
#read in test data set
subjectTest <- read.table('./test/subject_test.txt',header=FALSE); #imports subject_test.txt
xTest <- read.table('./train/x_test.txt',header=FALSE); #imports x_test.txt
yTest <- read.table('./train/y_test.txt',header=FALSE); #imports y_test.txt
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTrain) <- "subjectId";
colnames(xTest) <- features[,2];
colnames(yTest) <- "activityId";
#tidied Test data
testData <- cbind(subjectTest,yTest,xTest)
subjectTest <- read.table('./test/subject_test.txt',header=FALSE); #imports subject_test.txt
xTest <- read.table('./test/x_test.txt',header=FALSE); #imports x_test.txt
yTest <- read.table('./test/y_test.txt',header=FALSE); #imports y_test.txt
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTrain) <- "subjectId";
colnames(xTest) <- features[,2];
colnames(yTest) <- "activityId";
#tidied Test data
testData <- cbind(subjectTest,yTest,xTest)
View(trainingData)
View(testData)
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTest) <- "subjectId";
colnames(xTest) <- features[,2];
colnames(yTest) <- "activityId";
testData <- cbind(subjectTest,yTest,xTest)
View(testData)
wholeData<- rbind(trainingData,testData)
View(features)
?grep1
?grepl
colNames<-colnames(wholeData)
logicalVector = (grepl("activity..",colNames) | grepl("subject..",colNames) | grepl("-mean..",colNames) & !grepl("-meanFreq..",colNames) & !grepl("mean..-",colNames) | grepl("-std..",colNames) & !grepl("-std()..-",colNames));
View(testData)
logicalVector
logicalVector2 = ( grepl("-mean..",colNames) & !grepl("-meanFreq..",colNames) & !grepl("mean..-",colNames) | grepl("-std..",colNames) & !grepl("-std()..-",colNames));
logicalVector2
logicalVector2 = (grepl("activity..",colNames) | grepl("subject..",colNames) | grepl("-mean..",colNames) & !grepl("-meanFreq..",colNames) & !grepl("mean..-",colNames) | grepl("-std..",colNames));
logicalVector
logicalVector2
logicalVector2 = (grepl("..mean..",colNames)| grepl("..std..",colNames));
logicalVector2
logicalVector2 = (grepl("..mean..",colNames));
logicalVector2
i<-grep("-mean\\(\\)|-std\\(\\)", features[, 2]))
i<-grep("-mean\\(\\)|-std\\(\\)", features[, 2])
i
ind<-grep("-mean\\(\\)|-std\\(\\)", features[, 2])
subData<-wholeData[,ind]
View(subData)
test<-c(1, 2, 3, 4, 5, 6, 41, 42, 43, 44, 45, 46, 81, 82, 83, 84, 85, 86, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 201, 202, 214, 215, 227, 228, 240, 241, 253, 254, 266, 267, 268, 269, 270, 271, 345, 346, 347, 348, 349, 350, 424, 425, 426, 427, 428, 429, 503, 504, 516, 517, 529, 530, 542, 543)
ind=test
ind==test
ind==i
View(wholeData)
ind<-grep("-mean\\(\\)|-std\\(\\)", features[, 2])
ind3<-ind+3
subData<-wholeData[,ind3]
View(subData)
View(wholeData)
ind<-grep("-mean\\(\\)|-std\\(\\)", features[, 2])
ind3<-ind+2
subData<-wholeData[,ind3]
View(subData)
subData<-cbind(wholedata[,1:2],subdata)
subData<-cbind(wholeData[,1:2],subdata)
subData<-cbind(wholeData[,1:2],subData)
View(subData)
labeledData<-merge(subData,activityType, by="activityId")
View(labeledData)
labeledData2<-merge(activityType,subData, by="activityId")
View(labeledData2)
labeledData<-merge(activityType,subData, by="activityId")
tmp1 <- read.table("train/X_train.txt")
tmp2 <- read.table("test/X_test.txt")
X <- rbind(tmp1, tmp2)
tmp1 <- read.table("train/subject_train.txt")
tmp2 <- read.table("test/subject_test.txt")
S <- rbind(tmp1, tmp2)
tmp1 <- read.table("train/y_train.txt")
tmp2 <- read.table("test/y_test.txt")
Y <- rbind(tmp1, tmp2)
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
features <- read.table("features.txt")
indices_of_good_features <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, indices_of_good_features]
names(X) <- features[indices_of_good_features, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X)) # see last slide of the lecture Editing Text Variables (week 4)
# 3. Uses descriptive activity names to name the activities in the data set
activities <- read.table("activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity"
# 4. Appropriately labels the data set with descriptive activity names.
names(S) <- "subject"
cleaned <- cbind(S, Y, X)
View(cleaned)
View(activities)
#read in training data set
features <- read.table('./features.txt',header=FALSE); #imports features.txt
activityType <- read.table('./activity_labels.txt',header=FALSE); #imports activity_labels.txt
subjectTrain <- read.table('./train/subject_train.txt',header=FALSE); #imports subject_train.txt
xTrain <- read.table('./train/x_train.txt',header=FALSE); #imports x_train.txt
yTrain <- read.table('./train/y_train.txt',header=FALSE); #imports y_train.txt
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTrain) <- "subjectId";
colnames(xTrain) <- features[,2];
colnames(yTrain) <- "activityId";
#tidied Training data
trainingData <- cbind(subjectTrain,yTrain,xTrain)
#read in test data set
subjectTest <- read.table('./test/subject_test.txt',header=FALSE); #imports subject_test.txt
xTest <- read.table('./test/x_test.txt',header=FALSE); #imports x_test.txt
yTest <- read.table('./test/y_test.txt',header=FALSE); #imports y_test.txt
# Assigin column names to the data imported above
colnames(activityType) <- c('activityId','activityType');
colnames(subjectTest) <- "subjectId";
colnames(xTest) <- features[,2];
colnames(yTest) <- "activityId";
#tidied Test data
testData <- cbind(subjectTest,yTest,xTest)
#combine the two data sets
wholeData<- rbind(trainingData,testData)
#
# 2. Extracts only the measurements on the mean and standard deviation for each measurement.
#
#subset to only include the mean & std dev of each variable
#indexes of means & std devs
ind<-grep("-mean\\(\\)|-std\\(\\)", features[, 2])
ind3<-ind+2
subData<-wholeData[,ind3]
subData<-cbind(wholeData[,1:2],subData)
#
# 3. Uses descriptive activity names to name the activities in the data set
#
labeledData<-merge(activityType,subData, by="activityId")
View(labeledData)
labeledDat[3000,1:5]
labeledData[3000,1:5]
write.table(labeledData,"mergedmeans&std.txt")
getwd()
